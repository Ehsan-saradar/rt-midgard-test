openapi: 3.0.0
info:
  title: Midgard Public API
  version: 0.6.0
  contact:
    email: devs@thorchain.org
  description: >-
    The Midgard Public API queries THORChain and any chains linked via the Bifr√∂st
    and prepares information about the network to be readily available for public users.
    The API parses transaction event data from THORChain and stores them
    in a time-series database to make time-dependent queries easy.
    Midgard does not hold critical information.
    To interact with BEPSwap and Asgardex, users should query THORChain directly.
paths:
  /v2/doc:
    get:
      operationId: GetDocs
      summary: Get Documentation
      description: Swagger/OpenAPI 3.0 specification generated documents.
      responses:
        "200":
          description: swagger/OpenAPI 3.0 spec generated docs
      tags:
        - Documentation

  "/v2/health":
    get:
      operationId: GetHealth
      summary: Get Health
      description: Returns an object containing the health response of the API.
      responses:
        "200":
          $ref: '#/components/responses/HealthResponse'
  "/v2/pools":
    get:
      operationId: GetPools
      summary: Get Asset Pools
      # TODO(acsaba): understand what BEPSwap is.
      description: Returns an array containing all the assets supported on BEPSwap pools
      responses:
        "200":
          $ref: '#/components/responses/PoolsResponse'
  "/v2/assets":
    get:
      operationId: GetAssetInfo
      summary: Get Asset Information
      description: Detailed information about a specific asset. Returns enough information to display a unique asset in various user interfaces, including latest price.
      parameters:
        - name: asset
          in: query
          description: One or more comma separated unique asset (CHAIN.SYMBOL)
          required: true
          schema:
            type: string
          example: [BNB.TOMOB-1E1, BNB.TCAN-014]
      responses:
        "200":
          $ref: '#/components/responses/AssetsDetailedResponse'

components:
  responses:
    HealthResponse:
      description: Returns an health status of Midgard
      content:
        application/json:
          schema:
            type: object
            required:
            - database
            - scannerHeight
            - inSync
            properties:
              database:
                type: boolean
                description: True means healthy, connected to database.
              scannerHeight:
                type: string
                description: Int64, the current block count.
              inSync:
                type: boolean
                description: True means healthy. False means Midgard is still catching up to the chain.
    PoolsResponse:
      description: array of assets
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
    AssetsDetailedResponse:
      description: object containing detailed asset information
      content:
        application/json:
          schema:
            type: array
            items:
            $ref: '#/components/schemas/AssetDetail'
  schemas:
    AssetDetail:
      type: object
      required:
        - asset
        - dateCreated
        - priceRune
      properties:
        asset:
          type: string
        dateCreated:
          type: string
          description: Int64, unix timestamp (second).
        priceRune:
          # TODO(acsaba): consider changing it to float.
          type: string
          # TODO(acsaba): check if this formulation is correct.
          description: Float, price of asset in rune. I.e. rune ammount / asset ammount.

