// Package oapigen provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package oapigen

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {

	// True means healthy, connected to database.
	Database bool `json:"database"`

	// True means healthy. False means Midgard is still catching up to the chain.
	InSync bool `json:"inSync"`

	// Int64, the current block count.
	ScannerHeight string `json:"scannerHeight"`
}

// PoolsResponse defines model for PoolsResponse.
type PoolsResponse []string

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/5xUy44bNxD8lQaTozJS7MAHnWLHSXYPgYXdvQU+tDitGXo5JM3u0WZg6LfyA/mxoElJ",
	"lrRawMlJGj6qq7qK/cXYOKQYKAib5ReTiVMMTOXjhtBLf7df0hUbg1AQ/YspeWdRXAzzTxyDrrHtaUD9",
	"l3JMlMVVoBYF11ghWmKbXdJ7Zmke8kgwEAaGvlSbZmBjCGSFWpAIh6uNmRmZEpmlWcfoCYPZzYwL91Ow",
	"3wLbwG/o+bD4h2s7zC04BhbnPVgU27vQwZi0qvQEtkcXrpdliyFQviHX9fK8+m2QNz/NKsiYMwWBtY/2",
	"EWwcg5xAsmQXOrPbzUymz6PL1Jrln1/bdVnpKPjjESKuP5EVs1OMcxZ3JGMODBj2PQAWlJEhbg76Vcsq",
	"Rs//y2MnNBR7L9QcuWHOOF2jVjaUBzKTcD3iwiYe6qMt9WlA583StLTln6WPuXoSc6lyYXlPR1tX49o7",
	"C29Xt/B5pOyI4eHmw90vehswtIBhqv4yeBceqYWtw2LYO7fJ//zNUo6lTAkzMSi3PJRGAK7jKOVsIHmK",
	"+VEDsybIhK3zE+AWnce1J9jEDKlSGZkyN6AklVXCzMQgGQOjLbC01Zyo9bDJcbggzBKVh/Q0gC6BuIF+",
	"4KrtkBclMuAj1c2WEoVWQQ89IOSpOTapjcQQokAffQs2O3EW/anUBh4iuCCU0Qo8Oenh3a+r+ydMhdNb",
	"Vhz6a1bVAfdx9G2pNp3Qb10mK34quXfiNRnPjTIzs6XM1ctF86ZZqMUxUcDkzNK8bhbNwsxMQulL6Obb",
	"H+c11/rV0ZV3ePIC6jOBki0X9KGrgft3cRh6mkipDilZnWClD7etWZrfSeo8NLPzKflqsdCf7zNtzNJ8",
	"N/86UOfHc/OLUap553EYME8VGvbYujHfvpq30b4o6/4Ju47y/EOioGF63SyAE1m32b9V6CgodVKT7Tgo",
	"l6uC3kfLL8g5L8kvlDyvxFd0vd8TKHU1Adixzrjz9Y8H3Umn0bcYWkfIiZ/ofTGvjhTgMaWYlVgMx9RW",
	"9CuNWO03/rux5+Pzuf63Sgcq/m632/0bAAD//1LZPKVxBwAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
